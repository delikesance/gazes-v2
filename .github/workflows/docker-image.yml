name: Build and push Docker image

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      is_release: ${{ steps.meta.outputs.is_release }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host

      - name: Detect runner architecture
        id: arch
        run: |
          ARCH=$(uname -m)
          case "$ARCH" in
            x86_64) ARCH=amd64 ;;
            aarch64) ARCH=arm64 ;;
            *) ARCH=$ARCH ;;
          esac
          echo "arch=$ARCH" >> $GITHUB_OUTPUT

      - name: Extract version from tag or commit
        id: meta
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            VERSION=${GITHUB_SHA::8}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # Do not force a single platform here; let buildx build for the runner's architecture by default.
          # Use the detected architecture to separate cache refs per-arch.
          tags: |
            ghcr.io/${{ github.repository_owner }}/gazes-v2:${{ steps.meta.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/gazes-v2:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/gazes-v2:cache-${{ steps.arch.outputs.arch }}
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/gazes-v2:cache-${{ steps.arch.outputs.arch }},mode=max

  deploy:
    runs-on: self-hosted
    needs: build
    if: needs.build.result == 'success'

    steps:
      - name: Deploy on self-hosted runner (local Docker)
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/gazes-v2:latest
          docker stop gazes || true
          docker rm gazes || true
          docker run -d --restart=always --name gazes -p 3000:3000 -v gazes-data:/app/data ghcr.io/${{ github.repository_owner }}/gazes-v2:latest

