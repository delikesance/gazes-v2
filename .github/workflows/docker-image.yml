name: Build and push Docker image

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host

      - name: Extract version from tag
        id: meta
        run: |
          if [[ "${GITHUB_REF#refs/tags/}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.meta.outputs.is_release == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/gazes-v2:${{ steps.meta.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/gazes-v2:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/gazes-v2:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/gazes-v2:cache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success'

    steps:
      - name: Install cloudflared
        run: |
          curl -LO https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
          chmod +x cloudflared-linux-amd64
          sudo mv cloudflared-linux-amd64 /usr/local/bin/cloudflared

      - name: Add SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY_VALUE }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Run remote commands via SSH + Cloudflared Service Token
        env:
          TOKEN_ID: ${{ secrets.SERVICE_TOKEN_ID }}
          TOKEN_SECRET: ${{ secrets.SERVICE_TOKEN_SECRET }}
        run: |
          ssh -o ProxyCommand="cloudflared access ssh --id $TOKEN_ID --secret $TOKEN_SECRET --hostname ${{ secrets.CLOUDFLARE_TUNNEL_HOST }}" \
            -i ~/.ssh/id_ed25519 \
            -p ${{ secrets.SSH_PORT }} \
            ${{ secrets.SHH_USER }}@${{ secrets.CLOUDFLARE_TUNNEL_HOST }} \
            '
              docker pull ghcr.io/${{ github.repository_owner }}/gazes-v2:latest &&
              docker stop gazes || true &&
              docker rm gazes || true &&
              docker run -d --restart=always --name gazes -p 3000:3000 -v gazes-data:/app/data ghcr.io/${{ github.repository_owner }}/gazes-v2:latest
            '
